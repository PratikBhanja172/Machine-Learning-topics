# -*- coding: utf-8 -*-
"""simple-linear-regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CeJaPn9cm9676GYCe5VWhUVRDfO8QY1J
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv('/content/placement .csv')

df.head()

plt.scatter(df['cgpa'],df['package'])
plt.xlabel('CGPA')
plt.ylabel('Package(in LPA)')

X=df.iloc[:,0:1]
y=df.iloc[:,-1]

X

y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=2)

from sklearn.linear_model import LinearRegression

lr=LinearRegression()

lr.fit(X_train,y_train)

X_test

y_test

lr.predict(X_test.iloc[0].values.reshape(1, 1))

plt.scatter(df['cgpa'],df['package'])
plt.plot(X_test,lr.predict(X_test),color='red')
plt.xlabel('CGPA')
plt.ylabel('Package(in LPA)')

m=lr.coef_

m

b=lr.intercept_

b

#y=mx+c

m *8.58+3.89

class MereLR:
  def __init__(self):
    self.m=None
    self.b=None
  def fit(self,X_test):
    num=0
    den=0
    for i in range(X_train.shape[0]):
      num=num + (X_train[i]-X_train.mean())*(y_train[i]-y_train.mean())
      den = den+ (X_train[i]-X_train.mean())*(y_train[i]-y_train.mean())
      self.m=num/den
      self.b=y_train.mean()-(self.m*X_train.mean())
      print(self.m)
      print(self.b)
  def predict(self,X_test):
    print(X_test)
    return self.m + X_test+self.b

import numpy as np
import pandas as pd

df=pd.read_csv('/content/placement .csv')

X=df.iloc[:,0].values
y=df.iloc[:,1].values

x

y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=2)

X_train.shape

lr=MereLR()

X_test[0]

print("Prediction for CGPA 8.58:", lr.predict(8.58))

